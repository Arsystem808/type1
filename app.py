# app.py
# CapinteL-Q ‚Äî Streamlit UI (Polygon edition)
import os
import streamlit as st
from core_strategy import analyze_ticker, run_backtest

st.set_page_config(
    page_title="CapinteL-Q ‚Äî –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–æ–≤ (Polygon)",
    page_icon="üìà",
    layout="centered"
)

st.markdown(
    "### CapinteL-Q ‚Äî –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–æ–≤ (Polygon)\n"
    "–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö: **Polygon.io**. –í —Ç–µ–∫—Å—Ç–µ ‚Äî —Ç–æ–ª—å–∫–æ –¥–µ–π—Å—Ç–≤–∏—è (–≤—Ö–æ–¥/—Ü–µ–ª–∏/—Å—Ç–æ–ø/–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞). "
    "–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –∏ —Ä–∞—Å—á—ë—Ç—ã —Å–∫—Ä—ã—Ç—ã."
)

# --- –í–≤–æ–¥
ticker = st.text_input(
    "–¢–∏–∫–µ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, QQQ, AAPL, X:BTCUSD)",
    value="QQQ",
    placeholder="QQQ"
).strip().upper()

h_map = {
    "–¢—Ä–µ–π–¥ (1‚Äì5 –¥–Ω–µ–π)": "short",
    "–°—Ä–µ–¥–Ω–µ—Å—Ä–æ–∫ (1‚Äì4 –Ω–µ–¥–µ–ª–∏)": "mid",
    "–î–æ–ª–≥–æ—Å—Ä–æ–∫ (1‚Äì6 –º–µ—Å—è—Ü–µ–≤)": "long",
}
h_label = st.selectbox("–ì–æ—Ä–∏–∑–æ–Ω—Ç:", list(h_map.keys()), index=1)
horizon = h_map[h_label]

# --- –ö–Ω–æ–ø–∫–∞ –∞–Ω–∞–ª–∏–∑–∞
if st.button("–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å", use_container_width=True):
    try:
        d = analyze_ticker(ticker, horizon)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å —Ü–µ–Ω–æ–π
        st.markdown(f"#### {d.ticker} ‚Äî —Ç–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${d.price:,.2f}")

        # –†–µ–∑—É–ª—å—Ç–∞—Ç
        st.markdown("### üß† –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        st.write(f"**–°—Ü–µ–Ω–∞—Ä–∏–π:** {d.stance} ¬∑ **–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å:** {int(d.confidence)}%")
        if getattr(d, "comment", None):
            st.write(d.comment)

        # –£—Ä–æ–≤–Ω–∏ –¥–µ–π—Å—Ç–≤–∏–π
        if getattr(d, "entry", None):
            st.write(f"üéØ **–í—Ö–æ–¥:** {d.entry[0]:.2f} ‚Ä¶ {d.entry[1]:.2f}")
        if getattr(d, "target1", None):
            st.write(f"üéØ **–¶–µ–ª—å 1:** {d.target1:.2f}")
        if getattr(d, "target2", None):
            st.write(f"üéØ **–¶–µ–ª—å 2:** {d.target2:.2f}")
        if getattr(d, "stop", None):
            st.write(f"üõ°Ô∏è **–°—Ç–æ–ø/–∑–∞—â–∏—Ç–∞:** {d.stop:.2f}")

        # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ (–±–µ–∑ –ø–∏–≤–æ—Ç–æ–≤)
        meta = dict(getattr(d, "meta", {}) or {})
        if "pivots" in meta:
            meta.pop("pivots", None)  # –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Ä–æ–≤–Ω–∏ –ø–∏–≤–æ—Ç–æ–≤
        with st.expander("üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ (—É—Ä–æ–≤–Ω–∏ –∏ –º–µ—Ç–∞)", expanded=False):
            if meta:
                st.json(meta)
            else:
                st.caption("–ú–µ—Ç–∞-–¥–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.")

    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞: {e}")

# --- –ë—ç–∫—Ç–µ—Å—Ç (—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ)
st.markdown("---")
st.markdown("### üß™ –ë—ç–∫—Ç–µ—Å—Ç (—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ) ‚Äî –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤ –ø—Ä–æ–µ–∫—Ç–µ –µ—Å—Ç—å `run_backtest()`.")
years = st.slider("–ü–µ—Ä–∏–æ–¥, –ª–µ—Ç:", 1, 5, 3)
start_capital = st.number_input("–°—Ç–∞—Ä—Ç–æ–≤—ã–π –∫–∞–ø–∏—Ç–∞–ª, $", value=100_000.0, min_value=1_000.0, step=1_000.0, format="%.2f")
fee_bps = st.number_input("–ö–æ–º–∏—Å—Å–∏—è, –±.–ø. (–≤ –æ–±–µ —Å—Ç–æ—Ä–æ–Ω—ã)", value=5.0, min_value=0.0, step=0.5, format="%.2f")

if st.button("–ó–∞–ø—É—Å—Ç–∏—Ç—å –±—ç–∫—Ç–µ—Å—Ç", use_container_width=True):
    try:
        res = run_backtest(ticker=ticker, horizon=horizon, years=years,
                           start_capital=start_capital, fee_bps=fee_bps)
        summary = res.get("summary", {})
        st.success(
            f"–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: **{summary.get('ret_pct', 0):.2f}%** ¬∑ "
            f"–°—Ç–∞—Ä—Ç: ${summary.get('start', 0):,.2f} ‚Üí –ö–æ–Ω–µ—Ü: ${summary.get('end', 0):,.2f}"
        )

        eq = res.get("equity")
        if eq is not None and not eq.empty:
            st.line_chart(eq, x=eq.index, y="equity", height=220)

        trades = res.get("trades")
        if trades is not None and not trades.empty:
            st.caption(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫: {len(trades)}")
            st.dataframe(trades.tail(20), use_container_width=True, height=250)
        else:
            st.caption("–°–¥–µ–ª–æ–∫ –∑–∞ –ø–µ—Ä–∏–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ (–∏–ª–∏ –æ–Ω–∏ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã –ª–æ–≥–∏–∫–æ–π –≤—Ö–æ–¥/–≤—ã—Ö–æ–¥).")
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –±—ç–∫—Ç–µ—Å—Ç–∞: {e}")

# --- –§—É—Ç–µ—Ä
st.markdown("---")
st.caption("CapinteL-Q —Ñ–æ—Ä–º—É–ª–∏—Ä—É–µ—Ç –≤—ã–≤–æ–¥ –∫–∞–∫ —á–µ–ª–æ–≤–µ–∫ –∏ –Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Ä–∞—Å—á—ë—Ç—ã. "
           "–≠—Ç–æ –Ω–µ –∏–Ω–≤–µ—Å—Ç—Å–æ–≤–µ—Ç. –†–∏—Å–∫–∏ –Ω–∞ —Ä—ã–Ω–∫–µ –≤—Å–µ–≥–¥–∞ –µ—Å—Ç—å.")
