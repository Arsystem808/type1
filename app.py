# app.py
import os
import streamlit as st
from narrator import humanize
from core_strategy import analyze_ticker
from backtest import run_backtest

st.set_page_config(page_title="CapinteL-Q ‚Äî –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–æ–≤ (Polygon)", layout="centered")

st.title("CapinteL-Q ‚Äî –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–æ–≤ (Polygon)")
st.caption("–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö: Polygon.io ‚Ä¢ –í —Ç–µ–∫—Å—Ç–µ ‚Äî —Ç–æ–ª—å–∫–æ –¥–µ–π—Å—Ç–≤–∏—è (–≤—Ö–æ–¥/—Ü–µ–ª–∏/—Å—Ç–æ–ø/–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞). "
           "–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –∏ —Ä–∞—Å—á—ë—Ç—ã —Å–∫—Ä—ã—Ç—ã.")

ticker = st.text_input("–¢–∏–∫–µ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, QQQ, AAPL, X:BTCUSD)", "QQQ").upper().strip()

h_map = {
    "–¢—Ä–µ–π–¥ (1‚Äì5 –¥–Ω–µ–π)": "short",
    "–°—Ä–µ–¥–Ω–µ—Å—Ä–æ–∫ (1‚Äì4 –Ω–µ–¥–µ–ª–∏)": "mid",
    "–î–æ–ª–≥–æ—Å—Ä–æ–∫ (1‚Äì6 –º–µ—Å—è—Ü–µ–≤)": "long",
}
h_label = st.selectbox("–ì–æ—Ä–∏–∑–æ–Ω—Ç:", list(h_map.keys()), index=1)
horizon = h_map[h_label]

colA, _ = st.columns([1,1])
with colA:
    if st.button("–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å", use_container_width=True):
        try:
            dec = analyze_ticker(ticker, horizon=horizon)
            txt = humanize(ticker, dec)   # <- –±–µ–∑ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤
            st.subheader(f"{ticker} ‚Äî —Ç–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {dec.get('meta',{}).get('price','‚Äî')}")
            st.markdown("### üß† –†–µ–∑—É–ª—å—Ç–∞—Ç:")
            st.write(txt)
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞: {e}")

with st.expander("üìä –ë—ç–∫—Ç–µ—Å—Ç (—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ)"):
    y = st.slider("–ü–µ—Ä–∏–æ–¥, –ª–µ—Ç:", 1, 5, 3)
    start_cap = st.number_input("–°—Ç–∞—Ä—Ç–æ–≤—ã–π –∫–∞–ø–∏—Ç–∞–ª, $", 1_000.0, 10_000_000.0, 100_000.0, step=1_000.0)
    fee_bp = st.number_input("–ö–æ–º–∏—Å—Å–∏—è, –±.–ø. (–≤ –æ–±–µ —Å—Ç–æ—Ä–æ–Ω—ã)", 0.0, 50.0, 5.0, step=0.5)
    if st.button("–ó–∞–ø—É—Å—Ç–∏—Ç—å –±—ç–∫—Ç–µ—Å—Ç"):
        with st.spinner("–°—á–∏—Ç–∞—é‚Ä¶"):
            res = run_backtest(ticker, horizon=horizon, years=y, start_capital=start_cap, fee_bp=fee_bp)
        if "error" in res.get("summary", {}):
            st.warning(res["summary"]["error"])
        else:
            st.markdown("#### –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
            st.json(res["summary"])
            st.dataframe(res["trades"], use_container_width=True)
